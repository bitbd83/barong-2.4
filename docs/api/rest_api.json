{
  "info": {
    "title": "Barong",
    "description": "RESTful API for barong OAuth server",
    "version": "2.4.0"
  },
  "swagger": "2.0",
  "produces": [
    "application/json"
  ],
  "securityDefinitions": {
    "BearerToken": {
      "description": "Bearer Token authentication",
      "type": "jwt",
      "name": "Authorization",
      "in": "header"
    }
  },
  "host": "localhost:3000",
  "basePath": "/api/v2/*/",
  "tags": [
    {
      "name": "admin",
      "description": "Operations about admins"
    },
    {
      "name": "identity",
      "description": "Operations about identities"
    },
    {
      "name": "resource",
      "description": "Operations about resources"
    }
  ],
  "paths": {
    "/admin/levels": {
      "get": {
        "description": "Returns array of permissions as paginated collection",
        "produces": [
          "application/json"
        ],
        "security": [
          {
            "BearerToken": []
          }
        ],
        "responses": {
          "200": {
            "description": "Returns array of permissions as paginated collection"
          },
          "401": {
            "description": "Invalid bearer token"
          }
        },
        "tags": [
          "admin"
        ],
        "operationId": "getAdminLevels"
      }
    },
    "/admin/profiles": {
      "put": {
        "description": "Update a profile for user",
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "formData",
            "name": "uid",
            "type": "string",
            "required": true
          },
          {
            "in": "formData",
            "name": "first_name",
            "type": "string",
            "required": false
          },
          {
            "in": "formData",
            "name": "last_name",
            "type": "string",
            "required": false
          },
          {
            "in": "formData",
            "name": "dob",
            "type": "string",
            "format": "date",
            "required": false
          },
          {
            "in": "formData",
            "name": "address",
            "type": "string",
            "required": false
          },
          {
            "in": "formData",
            "name": "postcode",
            "type": "string",
            "required": false
          },
          {
            "in": "formData",
            "name": "city",
            "type": "string",
            "required": false
          },
          {
            "in": "formData",
            "name": "country",
            "type": "string",
            "required": false
          },
          {
            "in": "formData",
            "name": "state",
            "type": "string",
            "required": false
          },
          {
            "in": "formData",
            "name": "metadata",
            "description": "Any additional key: value pairs in json string format",
            "type": "string",
            "required": false
          }
        ],
        "security": [
          {
            "BearerToken": []
          }
        ],
        "responses": {
          "200": {
            "description": "Update a profile for user"
          },
          "400": {
            "description": "Required params are empty"
          },
          "401": {
            "description": "Invalid bearer token"
          },
          "422": {
            "description": "Validation errors"
          }
        },
        "tags": [
          "admin"
        ],
        "operationId": "putAdminProfiles"
      },
      "get": {
        "description": "Return all profiles",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "page",
            "description": "Page number (defaults to 1).",
            "type": "integer",
            "format": "int32",
            "default": 1,
            "required": false
          },
          {
            "in": "query",
            "name": "limit",
            "description": "Number of users per page (defaults to 100, maximum is 100).",
            "type": "integer",
            "format": "int32",
            "default": 100,
            "minimum": 1,
            "maximum": 100,
            "required": false
          }
        ],
        "security": [
          {
            "BearerToken": []
          }
        ],
        "responses": {
          "200": {
            "description": "Return all profiles"
          },
          "401": {
            "description": "Invalid bearer token"
          }
        },
        "tags": [
          "admin"
        ],
        "operationId": "getAdminProfiles"
      }
    },
    "/admin/restrictions": {
      "delete": {
        "description": "Delete restriction",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "id",
            "description": "Restriction id",
            "type": "integer",
            "format": "int32",
            "required": true
          }
        ],
        "security": [
          {
            "BearerToken": []
          }
        ],
        "responses": {
          "204": {
            "description": "Delete restriction"
          },
          "401": {
            "description": "Invalid bearer token"
          }
        },
        "tags": [
          "admin"
        ],
        "operationId": "deleteAdminRestrictions"
      },
      "put": {
        "description": "Update restriction",
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "formData",
            "name": "id",
            "description": "Restriction id",
            "type": "integer",
            "format": "int32",
            "required": true
          },
          {
            "in": "formData",
            "name": "scope",
            "type": "string",
            "enum": [
              "continent",
              "country",
              "ip",
              "ip_subnet"
            ],
            "required": false
          },
          {
            "in": "formData",
            "name": "value",
            "type": "string",
            "required": false
          },
          {
            "in": "formData",
            "name": "state",
            "type": "string",
            "enum": [
              "enabled",
              "disabled"
            ],
            "required": false
          }
        ],
        "security": [
          {
            "BearerToken": []
          }
        ],
        "responses": {
          "200": {
            "description": "Update restriction"
          },
          "401": {
            "description": "Invalid bearer token"
          }
        },
        "tags": [
          "admin"
        ],
        "operationId": "putAdminRestrictions"
      },
      "post": {
        "description": "Create restriction",
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "formData",
            "name": "scope",
            "type": "string",
            "enum": [
              "continent",
              "country",
              "ip",
              "ip_subnet"
            ],
            "required": true
          },
          {
            "in": "formData",
            "name": "value",
            "type": "string",
            "required": true
          },
          {
            "in": "formData",
            "name": "state",
            "type": "string",
            "default": "enabled",
            "enum": [
              "enabled",
              "disabled"
            ],
            "required": false
          }
        ],
        "security": [
          {
            "BearerToken": []
          }
        ],
        "responses": {
          "201": {
            "description": "Create restriction"
          },
          "401": {
            "description": "Invalid bearer token"
          }
        },
        "tags": [
          "admin"
        ],
        "operationId": "postAdminRestrictions"
      },
      "get": {
        "description": "Returns array of restrictions as a paginated collection",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "scope",
            "type": "string",
            "enum": [
              "continent",
              "country",
              "ip",
              "ip_subnet"
            ],
            "required": false
          },
          {
            "in": "query",
            "name": "range",
            "type": "string",
            "default": "created",
            "required": false
          },
          {
            "in": "query",
            "name": "page",
            "description": "Page number (defaults to 1).",
            "type": "integer",
            "format": "int32",
            "default": 1,
            "required": false
          },
          {
            "in": "query",
            "name": "limit",
            "description": "Number of users per page (defaults to 100, maximum is 100).",
            "type": "integer",
            "format": "int32",
            "default": 100,
            "minimum": 1,
            "maximum": 100,
            "required": false
          }
        ],
        "security": [
          {
            "BearerToken": []
          }
        ],
        "responses": {
          "200": {
            "description": "Returns array of restrictions as a paginated collection"
          },
          "401": {
            "description": "Invalid bearer token"
          }
        },
        "tags": [
          "admin"
        ],
        "operationId": "getAdminRestrictions"
      }
    },
    "/admin/metrics": {
      "get": {
        "description": "Returns main statistic in the given time period",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "created_from",
            "type": "string",
            "required": false
          },
          {
            "in": "query",
            "name": "created_to",
            "type": "string",
            "required": false
          }
        ],
        "security": [
          {
            "BearerToken": []
          }
        ],
        "responses": {
          "200": {
            "description": "Returns main statistic in the given time period"
          },
          "401": {
            "description": "Invalid bearer token"
          }
        },
        "tags": [
          "admin"
        ],
        "operationId": "getAdminMetrics"
      }
    },
    "/admin/activities/admin": {
      "get": {
        "description": "Returns array of activities as paginated collection",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "topic",
            "type": "string",
            "required": false
          },
          {
            "in": "query",
            "name": "action",
            "type": "string",
            "required": false
          },
          {
            "in": "query",
            "name": "uid",
            "type": "string",
            "required": false
          },
          {
            "in": "query",
            "name": "email",
            "type": "string",
            "required": false
          },
          {
            "in": "query",
            "name": "from",
            "description": "An integer represents the seconds elapsed since Unix epoch.If set, only records FROM the time will be retrieved.",
            "type": "integer",
            "format": "int32",
            "required": false
          },
          {
            "in": "query",
            "name": "to",
            "description": "An integer represents the seconds elapsed since Unix epoch.If set, only records BEFORE the time will be retrieved.",
            "type": "integer",
            "format": "int32",
            "required": false
          },
          {
            "in": "query",
            "name": "page",
            "description": "Page number (defaults to 1).",
            "type": "integer",
            "format": "int32",
            "default": 1,
            "required": false
          },
          {
            "in": "query",
            "name": "limit",
            "description": "Number of users per page (defaults to 100, maximum is 100).",
            "type": "integer",
            "format": "int32",
            "default": 100,
            "minimum": 1,
            "maximum": 100,
            "required": false
          },
          {
            "in": "query",
            "name": "target_uid",
            "type": "string",
            "required": false
          },
          {
            "in": "query",
            "name": "range",
            "type": "string",
            "default": "created",
            "required": false
          }
        ],
        "security": [
          {
            "BearerToken": []
          }
        ],
        "responses": {
          "200": {
            "description": "Returns array of activities as paginated collection"
          },
          "401": {
            "description": "Invalid bearer token"
          }
        },
        "tags": [
          "admin"
        ],
        "operationId": "getAdminActivitiesAdmin"
      }
    },
    "/admin/activities": {
      "get": {
        "description": "Returns array of activities as paginated collection",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "topic",
            "type": "string",
            "required": false
          },
          {
            "in": "query",
            "name": "action",
            "type": "string",
            "required": false
          },
          {
            "in": "query",
            "name": "uid",
            "type": "string",
            "required": false
          },
          {
            "in": "query",
            "name": "email",
            "type": "string",
            "required": false
          },
          {
            "in": "query",
            "name": "from",
            "description": "An integer represents the seconds elapsed since Unix epoch.If set, only records FROM the time will be retrieved.",
            "type": "integer",
            "format": "int32",
            "required": false
          },
          {
            "in": "query",
            "name": "to",
            "description": "An integer represents the seconds elapsed since Unix epoch.If set, only records BEFORE the time will be retrieved.",
            "type": "integer",
            "format": "int32",
            "required": false
          },
          {
            "in": "query",
            "name": "page",
            "description": "Page number (defaults to 1).",
            "type": "integer",
            "format": "int32",
            "default": 1,
            "required": false
          },
          {
            "in": "query",
            "name": "limit",
            "description": "Number of users per page (defaults to 100, maximum is 100).",
            "type": "integer",
            "format": "int32",
            "default": 100,
            "minimum": 1,
            "maximum": 100,
            "required": false
          }
        ],
        "security": [
          {
            "BearerToken": []
          }
        ],
        "responses": {
          "200": {
            "description": "Returns array of activities as paginated collection"
          },
          "401": {
            "description": "Invalid bearer token"
          }
        },
        "tags": [
          "admin"
        ],
        "operationId": "getAdminActivities"
      }
    },
    "/admin/permissions": {
      "put": {
        "description": "Update Permission",
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "formData",
            "name": "id",
            "description": "Permission id",
            "type": "integer",
            "format": "int32",
            "required": true
          },
          {
            "in": "formData",
            "name": "role",
            "description": "permission field - role",
            "type": "string",
            "required": false
          },
          {
            "in": "formData",
            "name": "verb",
            "description": "permission field - request verb",
            "type": "string",
            "required": false
          },
          {
            "in": "formData",
            "name": "path",
            "description": "permission field - request path",
            "type": "string",
            "required": false
          },
          {
            "in": "formData",
            "name": "action",
            "type": "string",
            "required": false
          },
          {
            "in": "formData",
            "name": "topic",
            "type": "string",
            "required": false
          }
        ],
        "security": [
          {
            "BearerToken": []
          }
        ],
        "responses": {
          "200": {
            "description": "Update Permission"
          },
          "401": {
            "description": "Invalid bearer token"
          }
        },
        "tags": [
          "admin"
        ],
        "operationId": "putAdminPermissions"
      },
      "delete": {
        "description": "Deletes permission",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "id",
            "description": "permission id",
            "type": "integer",
            "format": "int32",
            "required": true
          }
        ],
        "security": [
          {
            "BearerToken": []
          }
        ],
        "responses": {
          "204": {
            "description": "Deletes permission"
          },
          "401": {
            "description": "Invalid bearer token"
          }
        },
        "tags": [
          "admin"
        ],
        "operationId": "deleteAdminPermissions"
      },
      "post": {
        "description": "Create permission",
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "formData",
            "name": "role",
            "type": "string",
            "required": true
          },
          {
            "in": "formData",
            "name": "verb",
            "type": "string",
            "required": true
          },
          {
            "in": "formData",
            "name": "path",
            "type": "string",
            "required": true
          },
          {
            "in": "formData",
            "name": "action",
            "type": "string",
            "required": true
          },
          {
            "in": "formData",
            "name": "topic",
            "type": "string",
            "required": false
          }
        ],
        "security": [
          {
            "BearerToken": []
          }
        ],
        "responses": {
          "201": {
            "description": "Create permission"
          },
          "401": {
            "description": "Invalid bearer token"
          }
        },
        "tags": [
          "admin"
        ],
        "operationId": "postAdminPermissions"
      },
      "get": {
        "description": "Returns array of permissions as paginated collection",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "page",
            "description": "Page number (defaults to 1).",
            "type": "integer",
            "format": "int32",
            "default": 1,
            "required": false
          },
          {
            "in": "query",
            "name": "limit",
            "description": "Number of users per page (defaults to 100, maximum is 100).",
            "type": "integer",
            "format": "int32",
            "default": 100,
            "minimum": 1,
            "maximum": 100,
            "required": false
          }
        ],
        "security": [
          {
            "BearerToken": []
          }
        ],
        "responses": {
          "200": {
            "description": "Returns array of permissions as paginated collection"
          },
          "401": {
            "description": "Invalid bearer token"
          }
        },
        "tags": [
          "admin"
        ],
        "operationId": "getAdminPermissions"
      }
    },
    "/admin/users/data_storage": {
      "delete": {
        "description": "Deletes user's data storage record",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "uid",
            "description": "user uniq id",
            "type": "string",
            "required": true
          },
          {
            "in": "query",
            "name": "title",
            "description": "data storage uniq title",
            "type": "string",
            "required": true
          }
        ],
        "security": [
          {
            "BearerToken": []
          }
        ],
        "responses": {
          "204": {
            "description": "Deletes user's data storage record"
          },
          "401": {
            "description": "Invalid bearer token"
          }
        },
        "tags": [
          "admin"
        ],
        "operationId": "deleteAdminUsersDataStorage"
      }
    },
    "/admin/users/{uid}": {
      "get": {
        "description": "Returns user info",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "uid",
            "description": "user uniq id",
            "type": "string",
            "required": true
          }
        ],
        "security": [
          {
            "BearerToken": []
          }
        ],
        "responses": {
          "200": {
            "description": "Returns user info"
          },
          "401": {
            "description": "Invalid bearer token"
          }
        },
        "tags": [
          "admin"
        ],
        "operationId": "getAdminUsersUid"
      }
    },
    "/admin/users/labels": {
      "delete": {
        "description": "Deletes label for user",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "uid",
            "description": "user uniq id",
            "type": "string",
            "required": true
          },
          {
            "in": "query",
            "name": "key",
            "description": "label key. [a-z0-9_-]+ should be used. Min - 3, max - 255 characters.",
            "type": "string",
            "required": true
          },
          {
            "in": "query",
            "name": "scope",
            "description": "label key. [a-z0-9_-]+ should be used. Min - 3, max - 255 characters.",
            "type": "string",
            "required": true
          }
        ],
        "security": [
          {
            "BearerToken": []
          }
        ],
        "responses": {
          "204": {
            "description": "Deletes label for user"
          },
          "401": {
            "description": "Invalid bearer token"
          }
        },
        "tags": [
          "admin"
        ],
        "operationId": "deleteAdminUsersLabels"
      },
      "put": {
        "description": "Update user label scope",
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "formData",
            "name": "uid",
            "description": "user uniq id",
            "type": "string",
            "required": true
          },
          {
            "in": "formData",
            "name": "key",
            "description": "Label key.",
            "type": "string",
            "required": true
          },
          {
            "in": "formData",
            "name": "scope",
            "description": "label key. [a-z0-9_-]+ should be used. Min - 3, max - 255 characters.",
            "type": "string",
            "required": true
          },
          {
            "in": "formData",
            "name": "description",
            "description": "label description. [A-Za-z0-9_-] should be used. max - 255 characters.",
            "type": "string",
            "required": false
          },
          {
            "in": "formData",
            "name": "value",
            "description": "Label value.",
            "type": "string",
            "required": true
          }
        ],
        "security": [
          {
            "BearerToken": []
          }
        ],
        "responses": {
          "200": {
            "description": "Update user label scope"
          },
          "400": {
            "description": "Required params are empty"
          },
          "401": {
            "description": "Invalid bearer token"
          },
          "404": {
            "description": "Record is not found"
          },
          "422": {
            "description": "Validation errors"
          }
        },
        "tags": [
          "admin"
        ],
        "operationId": "putAdminUsersLabels"
      },
      "post": {
        "description": "Adds label for user",
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "formData",
            "name": "uid",
            "description": "user uniq id",
            "type": "string",
            "required": true
          },
          {
            "in": "formData",
            "name": "key",
            "description": "label key. [a-z0-9_-]+ should be used. Min - 3, max - 255 characters.",
            "type": "string",
            "required": true
          },
          {
            "in": "formData",
            "name": "value",
            "description": "label value. [A-Za-z0-9_-] should be used. Min - 3, max - 255 characters.",
            "type": "string",
            "required": true
          },
          {
            "in": "formData",
            "name": "description",
            "description": "label description. [A-Za-z0-9_-] should be used. max - 255 characters.",
            "type": "string",
            "required": false
          },
          {
            "in": "formData",
            "name": "scope",
            "description": "Label scope: 'public' or 'private'. Default is public",
            "type": "string",
            "required": false
          }
        ],
        "security": [
          {
            "BearerToken": []
          }
        ],
        "responses": {
          "201": {
            "description": "Adds label for user"
          },
          "401": {
            "description": "Invalid bearer token"
          }
        },
        "tags": [
          "admin"
        ],
        "operationId": "postAdminUsersLabels"
      },
      "get": {
        "description": "Returns array of users as paginated collection",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "key",
            "description": "Label key",
            "type": "string",
            "required": true
          },
          {
            "in": "query",
            "name": "value",
            "description": "Label value",
            "type": "string",
            "required": true
          },
          {
            "in": "query",
            "name": "page",
            "description": "Page number (defaults to 1).",
            "type": "integer",
            "format": "int32",
            "default": 1,
            "required": false
          },
          {
            "in": "query",
            "name": "limit",
            "description": "Number of users per page (defaults to 100, maximum is 100).",
            "type": "integer",
            "format": "int32",
            "default": 100,
            "minimum": 1,
            "maximum": 100,
            "required": false
          }
        ],
        "security": [
          {
            "BearerToken": []
          }
        ],
        "responses": {
          "200": {
            "description": "Returns array of users as paginated collection"
          },
          "401": {
            "description": "Invalid bearer token"
          }
        },
        "tags": [
          "admin"
        ],
        "operationId": "getAdminUsersLabels"
      }
    },
    "/admin/users/labels/update": {
      "post": {
        "description": "Update user label value",
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "formData",
            "name": "uid",
            "description": "user uniq id",
            "type": "string",
            "required": true
          },
          {
            "in": "formData",
            "name": "key",
            "description": "Label key.",
            "type": "string",
            "required": true
          },
          {
            "in": "formData",
            "name": "scope",
            "description": "label key. [a-z0-9_-]+ should be used. Min - 3, max - 255 characters.",
            "type": "string",
            "required": true
          },
          {
            "in": "formData",
            "name": "value",
            "description": "Label value.",
            "type": "string",
            "required": true
          },
          {
            "in": "formData",
            "name": "description",
            "description": "label description. [A-Za-z0-9_-] should be used. max - 255 characters.",
            "type": "string",
            "required": false
          },
          {
            "in": "formData",
            "name": "replace",
            "description": "When true label will be created if not exist",
            "type": "Boolean",
            "default": true,
            "required": false
          }
        ],
        "security": [
          {
            "BearerToken": []
          }
        ],
        "responses": {
          "201": {
            "description": "Update user label value"
          },
          "400": {
            "description": "Required params are empty"
          },
          "401": {
            "description": "Invalid bearer token"
          },
          "404": {
            "description": "Record is not found"
          },
          "422": {
            "description": "Validation errors"
          }
        },
        "tags": [
          "admin"
        ],
        "operationId": "postAdminUsersLabelsUpdate"
      }
    },
    "/admin/users/labels/list": {
      "get": {
        "description": "Returns existing labels keys and values",
        "produces": [
          "application/json"
        ],
        "security": [
          {
            "BearerToken": []
          }
        ],
        "responses": {
          "200": {
            "description": "Returns existing labels keys and values"
          },
          "401": {
            "description": "Invalid bearer token"
          }
        },
        "tags": [
          "admin"
        ],
        "operationId": "getAdminUsersLabelsList"
      }
    },
    "/admin/users/documents/pending": {
      "get": {
        "description": "Returns array of users with pending or replaced documents as paginated collection",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "extended",
            "description": "When true endpoint returns full information about users",
            "type": "Boolean",
            "required": false
          },
          {
            "in": "query",
            "name": "uid",
            "type": "string",
            "required": false
          },
          {
            "in": "query",
            "name": "email",
            "type": "string",
            "required": false
          },
          {
            "in": "query",
            "name": "role",
            "type": "string",
            "required": false
          },
          {
            "in": "query",
            "name": "first_name",
            "type": "string",
            "required": false
          },
          {
            "in": "query",
            "name": "last_name",
            "type": "string",
            "required": false
          },
          {
            "in": "query",
            "name": "country",
            "type": "string",
            "required": false
          },
          {
            "in": "query",
            "name": "level",
            "type": "integer",
            "format": "int32",
            "required": false
          },
          {
            "in": "query",
            "name": "state",
            "type": "string",
            "required": false
          },
          {
            "in": "query",
            "name": "range",
            "type": "string",
            "default": "created",
            "required": false
          },
          {
            "in": "query",
            "name": "from",
            "description": "An integer represents the seconds elapsed since Unix epoch.If set, only records FROM the time will be retrieved.",
            "type": "integer",
            "format": "int32",
            "required": false
          },
          {
            "in": "query",
            "name": "to",
            "description": "An integer represents the seconds elapsed since Unix epoch.If set, only records BEFORE the time will be retrieved.",
            "type": "integer",
            "format": "int32",
            "required": false
          },
          {
            "in": "query",
            "name": "page",
            "description": "Page number (defaults to 1).",
            "type": "integer",
            "format": "int32",
            "default": 1,
            "required": false
          },
          {
            "in": "query",
            "name": "limit",
            "description": "Number of users per page (defaults to 100, maximum is 100).",
            "type": "integer",
            "format": "int32",
            "default": 100,
            "minimum": 1,
            "maximum": 100,
            "required": false
          }
        ],
        "security": [
          {
            "BearerToken": []
          }
        ],
        "responses": {
          "200": {
            "description": "Returns array of users with pending or replaced documents as paginated collection"
          },
          "401": {
            "description": "Invalid bearer token"
          }
        },
        "tags": [
          "admin"
        ],
        "operationId": "getAdminUsersDocumentsPending"
      }
    },
    "/admin/users": {
      "put": {
        "description": "Update user attributes",
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "formData",
            "name": "uid",
            "description": "user uniq id",
            "type": "string",
            "required": true
          },
          {
            "in": "formData",
            "name": "state",
            "description": "user state",
            "type": "string",
            "required": false
          },
          {
            "in": "formData",
            "name": "otp",
            "description": "user 2fa status",
            "type": "Boolean",
            "required": false
          }
        ],
        "security": [
          {
            "BearerToken": []
          }
        ],
        "responses": {
          "200": {
            "description": "Update user attributes"
          },
          "401": {
            "description": "Invalid bearer token"
          }
        },
        "tags": [
          "admin"
        ],
        "operationId": "putAdminUsers"
      },
      "get": {
        "description": "Returns array of users as paginated collection",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "extended",
            "description": "When true endpoint returns full information about users",
            "type": "Boolean",
            "required": false
          },
          {
            "in": "query",
            "name": "uid",
            "type": "string",
            "required": false
          },
          {
            "in": "query",
            "name": "email",
            "type": "string",
            "required": false
          },
          {
            "in": "query",
            "name": "role",
            "type": "string",
            "required": false
          },
          {
            "in": "query",
            "name": "first_name",
            "type": "string",
            "required": false
          },
          {
            "in": "query",
            "name": "last_name",
            "type": "string",
            "required": false
          },
          {
            "in": "query",
            "name": "country",
            "type": "string",
            "required": false
          },
          {
            "in": "query",
            "name": "level",
            "type": "integer",
            "format": "int32",
            "required": false
          },
          {
            "in": "query",
            "name": "state",
            "type": "string",
            "required": false
          },
          {
            "in": "query",
            "name": "range",
            "type": "string",
            "default": "created",
            "required": false
          },
          {
            "in": "query",
            "name": "from",
            "description": "An integer represents the seconds elapsed since Unix epoch.If set, only records FROM the time will be retrieved.",
            "type": "integer",
            "format": "int32",
            "required": false
          },
          {
            "in": "query",
            "name": "to",
            "description": "An integer represents the seconds elapsed since Unix epoch.If set, only records BEFORE the time will be retrieved.",
            "type": "integer",
            "format": "int32",
            "required": false
          },
          {
            "in": "query",
            "name": "page",
            "description": "Page number (defaults to 1).",
            "type": "integer",
            "format": "int32",
            "default": 1,
            "required": false
          },
          {
            "in": "query",
            "name": "limit",
            "description": "Number of users per page (defaults to 100, maximum is 100).",
            "type": "integer",
            "format": "int32",
            "default": 100,
            "minimum": 1,
            "maximum": 100,
            "required": false
          }
        ],
        "security": [
          {
            "BearerToken": []
          }
        ],
        "responses": {
          "200": {
            "description": "Returns array of users as paginated collection"
          },
          "401": {
            "description": "Invalid bearer token"
          }
        },
        "tags": [
          "admin"
        ],
        "operationId": "getAdminUsers"
      }
    },
    "/admin/users/role": {
      "post": {
        "description": "Update user role",
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "formData",
            "name": "uid",
            "description": "user uniq id",
            "type": "string",
            "required": true
          },
          {
            "in": "formData",
            "name": "role",
            "description": "user role",
            "type": "string",
            "required": true
          }
        ],
        "security": [
          {
            "BearerToken": []
          }
        ],
        "responses": {
          "201": {
            "description": "Update user role"
          },
          "401": {
            "description": "Invalid bearer token"
          }
        },
        "tags": [
          "admin"
        ],
        "operationId": "postAdminUsersRole"
      }
    },
    "/admin/users/update": {
      "post": {
        "description": "Update user attributes",
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "formData",
            "name": "uid",
            "description": "user uniq id",
            "type": "string",
            "required": true
          },
          {
            "in": "formData",
            "name": "state",
            "description": "user state",
            "type": "string",
            "required": false
          },
          {
            "in": "formData",
            "name": "otp",
            "description": "user 2fa status",
            "type": "Boolean",
            "required": false
          }
        ],
        "security": [
          {
            "BearerToken": []
          }
        ],
        "responses": {
          "201": {
            "description": "Update user attributes"
          },
          "401": {
            "description": "Invalid bearer token"
          }
        },
        "tags": [
          "admin"
        ],
        "operationId": "postAdminUsersUpdate"
      }
    },
    "/identity/users/password/confirm_code": {
      "post": {
        "description": "Sets new account password",
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "formData",
            "name": "reset_password_token",
            "description": "Token from email",
            "type": "string",
            "required": true
          },
          {
            "in": "formData",
            "name": "password",
            "description": "User password",
            "type": "string",
            "required": true
          },
          {
            "in": "formData",
            "name": "confirm_password",
            "description": "User password",
            "type": "string",
            "required": true
          },
          {
            "in": "formData",
            "name": "lang",
            "description": "Language in iso-2 format",
            "type": "string",
            "required": false
          }
        ],
        "responses": {
          "201": {
            "description": "Resets password"
          },
          "400": {
            "description": "Required params are empty"
          },
          "404": {
            "description": "Record is not found"
          },
          "422": {
            "description": "Validation errors"
          }
        },
        "tags": [
          "identity"
        ],
        "operationId": "postIdentityUsersPasswordConfirmCode"
      }
    },
    "/identity/users/password/generate_code": {
      "post": {
        "description": "Send password reset instructions",
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "formData",
            "name": "email",
            "description": "Account email",
            "type": "string",
            "required": true
          },
          {
            "in": "formData",
            "name": "lang",
            "description": "Language in iso-2 format",
            "type": "string",
            "required": false
          },
          {
            "in": "formData",
            "name": "captcha_response",
            "description": "Response from captcha widget",
            "type": "string",
            "required": false
          }
        ],
        "responses": {
          "201": {
            "description": "Generated password reset code"
          },
          "400": {
            "description": "Required params are missing"
          },
          "404": {
            "description": "User doesn't exist"
          },
          "422": {
            "description": "Validation errors"
          }
        },
        "tags": [
          "identity"
        ],
        "operationId": "postIdentityUsersPasswordGenerateCode"
      }
    },
    "/identity/users/email/confirm_code": {
      "post": {
        "description": "Confirms an account",
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "formData",
            "name": "token",
            "description": "Token from email",
            "type": "string",
            "required": true
          },
          {
            "in": "formData",
            "name": "lang",
            "description": "Language in iso-2 format",
            "type": "string",
            "required": false
          }
        ],
        "responses": {
          "201": {
            "description": "Confirms an account"
          },
          "400": {
            "description": "Required params are missing"
          },
          "422": {
            "description": "Validation errors"
          }
        },
        "tags": [
          "identity"
        ],
        "operationId": "postIdentityUsersEmailConfirmCode"
      }
    },
    "/identity/users/email/generate_code": {
      "post": {
        "description": "Send confirmations instructions",
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "formData",
            "name": "email",
            "description": "Account email",
            "type": "string",
            "required": true
          },
          {
            "in": "formData",
            "name": "lang",
            "description": "Client env language",
            "type": "string",
            "required": false
          },
          {
            "in": "formData",
            "name": "captcha_response",
            "description": "Response from captcha widget",
            "type": "string",
            "required": false
          }
        ],
        "responses": {
          "201": {
            "description": "Generated verification code"
          },
          "400": {
            "description": "Required params are missing"
          },
          "422": {
            "description": "Validation errors"
          }
        },
        "tags": [
          "identity"
        ],
        "operationId": "postIdentityUsersEmailGenerateCode"
      }
    },
    "/identity/users/register_geetest": {
      "get": {
        "description": "Register Geetest captcha",
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Register Geetest captcha"
          }
        },
        "tags": [
          "identity"
        ],
        "operationId": "getIdentityUsersRegisterGeetest"
      }
    },
    "/identity/users": {
      "post": {
        "description": "Creates new user",
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "formData",
            "name": "email",
            "description": "User Email",
            "type": "string",
            "required": true
          },
          {
            "in": "formData",
            "name": "password",
            "description": "User Password",
            "type": "string",
            "required": true
          },
          {
            "in": "formData",
            "name": "refid",
            "description": "Referral uid",
            "type": "string",
            "required": false
          },
          {
            "in": "formData",
            "name": "lang",
            "description": "Client env language",
            "type": "string",
            "required": false
          },
          {
            "in": "formData",
            "name": "captcha_response",
            "description": "Response from captcha widget",
            "type": "string",
            "required": false
          },
          {
            "in": "formData",
            "name": "data",
            "description": "Any additional key: value pairs in json string format",
            "type": "string",
            "required": false
          }
        ],
        "responses": {
          "201": {
            "description": "Creates new user"
          },
          "400": {
            "description": "Required params are missing"
          },
          "422": {
            "description": "Validation errors"
          }
        },
        "tags": [
          "identity"
        ],
        "operationId": "postIdentityUsers"
      }
    },
    "/identity/sessions": {
      "delete": {
        "description": "Destroy current session",
        "produces": [
          "application/json"
        ],
        "responses": {
          "204": {
            "description": "Destroy current session"
          },
          "400": {
            "description": "Required params are empty"
          },
          "404": {
            "description": "Record is not found"
          }
        },
        "tags": [
          "identity"
        ],
        "operationId": "deleteIdentitySessions"
      },
      "post": {
        "description": "Start a new session",
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "formData",
            "name": "email",
            "type": "string",
            "required": true
          },
          {
            "in": "formData",
            "name": "password",
            "type": "string",
            "required": true
          },
          {
            "in": "formData",
            "name": "captcha_response",
            "description": "Response from captcha widget",
            "type": "string",
            "required": false
          },
          {
            "in": "formData",
            "name": "otp_code",
            "description": "Code from Google Authenticator",
            "type": "string",
            "required": false
          }
        ],
        "responses": {
          "201": {
            "description": "Start a new session"
          },
          "400": {
            "description": "Required params are empty"
          },
          "404": {
            "description": "Record is not found"
          }
        },
        "tags": [
          "identity"
        ],
        "operationId": "postIdentitySessions"
      }
    },
    "/identity/configs": {
      "get": {
        "description": "Get barong configurations",
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Get barong configurations"
          }
        },
        "tags": [
          "identity"
        ],
        "operationId": "getIdentityConfigs"
      }
    },
    "/identity/version": {
      "get": {
        "description": "Get barong version",
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Get barong version"
          }
        },
        "tags": [
          "identity"
        ],
        "operationId": "getIdentityVersion"
      }
    },
    "/identity/time": {
      "get": {
        "description": "Get server current unix timestamp.",
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Get server current unix timestamp."
          }
        },
        "tags": [
          "identity"
        ],
        "operationId": "getIdentityTime"
      }
    },
    "/identity/ping": {
      "get": {
        "description": "Test connectivity",
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Test connectivity"
          }
        },
        "tags": [
          "identity"
        ],
        "operationId": "getIdentityPing"
      }
    },
    "/identity/password/validate": {
      "post": {
        "description": "Password strength testing",
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "formData",
            "name": "password",
            "description": "User password",
            "type": "string",
            "required": true
          }
        ],
        "responses": {
          "201": {
            "description": "Password strength testing"
          }
        },
        "tags": [
          "identity"
        ],
        "operationId": "postIdentityPasswordValidate"
      }
    },
    "/resource/data_storage": {
      "post": {
        "description": "Create data storage",
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "formData",
            "name": "title",
            "type": "string",
            "required": true
          },
          {
            "in": "formData",
            "name": "data",
            "type": "string",
            "required": true
          }
        ],
        "security": [
          {
            "BearerToken": []
          }
        ],
        "responses": {
          "201": {
            "description": "Create data storage"
          },
          "401": {
            "description": "Invalid bearer token"
          },
          "422": {
            "description": "Validation errors"
          }
        },
        "tags": [
          "resource"
        ],
        "operationId": "postResourceDataStorage"
      }
    },
    "/resource/api_keys": {
      "get": {
        "description": "List all api keys for current account.",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "page",
            "description": "Page number (defaults to 1).",
            "type": "integer",
            "format": "int32",
            "default": 1,
            "required": false
          },
          {
            "in": "query",
            "name": "limit",
            "description": "Number of users per page (defaults to 100, maximum is 100).",
            "type": "integer",
            "format": "int32",
            "default": 100,
            "minimum": 1,
            "maximum": 100,
            "required": false
          }
        ],
        "security": [
          {
            "BearerToken": []
          }
        ],
        "responses": {
          "200": {
            "description": "List all api keys for current account."
          },
          "400": {
            "description": "Require 2FA and totp code"
          },
          "401": {
            "description": "Invalid bearer token"
          }
        },
        "tags": [
          "resource"
        ],
        "operationId": "getResourceApiKeys"
      },
      "post": {
        "description": "Create an api key",
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "formData",
            "name": "algorithm",
            "type": "string",
            "required": true
          },
          {
            "in": "formData",
            "name": "kid",
            "type": "string",
            "required": false
          },
          {
            "in": "formData",
            "name": "scope",
            "description": "comma separated scopes",
            "type": "string",
            "required": false
          },
          {
            "in": "formData",
            "name": "totp_code",
            "description": "Code from Google Authenticator",
            "type": "string",
            "required": true
          }
        ],
        "security": [
          {
            "BearerToken": []
          }
        ],
        "responses": {
          "201": {
            "description": "Create an api key"
          },
          "400": {
            "description": "Required params are empty"
          },
          "401": {
            "description": "Invalid bearer token"
          },
          "422": {
            "description": "Validation errors"
          }
        },
        "tags": [
          "resource"
        ],
        "operationId": "postResourceApiKeys"
      }
    },
    "/resource/api_keys/{kid}": {
      "delete": {
        "description": "Delete an api key",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "kid",
            "type": "string",
            "required": true
          },
          {
            "in": "query",
            "name": "totp_code",
            "description": "Code from Google Authenticator",
            "type": "string",
            "required": true
          }
        ],
        "security": [
          {
            "BearerToken": []
          }
        ],
        "responses": {
          "204": {
            "description": "Succefully deleted"
          },
          "400": {
            "description": "Required params are empty"
          },
          "401": {
            "description": "Invalid bearer token"
          },
          "404": {
            "description": "Record is not found"
          }
        },
        "tags": [
          "resource"
        ],
        "operationId": "deleteResourceApiKeysKid"
      },
      "patch": {
        "description": "Updates an api key",
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "kid",
            "type": "string",
            "required": true
          },
          {
            "in": "formData",
            "name": "scope",
            "description": "comma separated scopes",
            "type": "string",
            "required": false
          },
          {
            "in": "formData",
            "name": "state",
            "description": "State of API Key. \"active\" state means key is active and can be used for auth",
            "type": "string",
            "required": false
          },
          {
            "in": "formData",
            "name": "totp_code",
            "description": "Code from Google Authenticator",
            "type": "string",
            "required": true
          }
        ],
        "security": [
          {
            "BearerToken": []
          }
        ],
        "responses": {
          "200": {
            "description": "Updates an api key"
          },
          "400": {
            "description": "Required params are empty"
          },
          "401": {
            "description": "Invalid bearer token"
          },
          "404": {
            "description": "Record is not found"
          },
          "422": {
            "description": "Validation errors"
          }
        },
        "tags": [
          "resource"
        ],
        "operationId": "patchResourceApiKeysKid"
      }
    },
    "/resource/otp/verify": {
      "post": {
        "description": "Verify 2FA code",
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "formData",
            "name": "code",
            "description": "Code from Google Authenticator",
            "type": "string",
            "required": true
          }
        ],
        "security": [
          {
            "BearerToken": []
          }
        ],
        "responses": {
          "201": {
            "description": "Verify 2FA code"
          },
          "400": {
            "description": "2FA has not been enabled for this account or code is missing"
          },
          "401": {
            "description": "Invalid bearer token"
          },
          "422": {
            "description": "Validation errors"
          }
        },
        "tags": [
          "resource"
        ],
        "operationId": "postResourceOtpVerify"
      }
    },
    "/resource/otp/disable": {
      "post": {
        "description": "Disable 2FA",
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "formData",
            "name": "code",
            "description": "Code from Google Authenticator",
            "type": "string",
            "required": true
          }
        ],
        "security": [
          {
            "BearerToken": []
          }
        ],
        "responses": {
          "201": {
            "description": "Disable 2FA"
          },
          "400": {
            "description": "2FA has not been enabled for this account or code is missing"
          },
          "401": {
            "description": "Invalid bearer token"
          },
          "422": {
            "description": "Validation errors"
          }
        },
        "tags": [
          "resource"
        ],
        "operationId": "postResourceOtpDisable"
      }
    },
    "/resource/otp/enable": {
      "post": {
        "description": "Enable 2FA",
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "formData",
            "name": "code",
            "description": "Code from Google Authenticator",
            "type": "string",
            "required": true
          }
        ],
        "security": [
          {
            "BearerToken": []
          }
        ],
        "responses": {
          "201": {
            "description": "Enable 2FA"
          },
          "400": {
            "description": "2FA has been enabled for this account or code is missing"
          },
          "401": {
            "description": "Invalid bearer token"
          },
          "422": {
            "description": "Validation errors"
          }
        },
        "tags": [
          "resource"
        ],
        "operationId": "postResourceOtpEnable"
      }
    },
    "/resource/otp/generate_qrcode": {
      "post": {
        "description": "Generate qr code for 2FA",
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "security": [
          {
            "BearerToken": []
          }
        ],
        "responses": {
          "201": {
            "description": "Generate qr code for 2FA"
          },
          "400": {
            "description": "2FA has been enabled for this account"
          },
          "401": {
            "description": "Invalid bearer token"
          }
        },
        "tags": [
          "resource"
        ],
        "operationId": "postResourceOtpGenerateQrcode"
      }
    },
    "/resource/phones/verify": {
      "post": {
        "description": "Verify a phone",
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "formData",
            "name": "phone_number",
            "description": "Phone number with country code",
            "type": "string",
            "required": true
          },
          {
            "in": "formData",
            "name": "verification_code",
            "description": "Verification code from sms",
            "type": "string",
            "required": true
          }
        ],
        "security": [
          {
            "BearerToken": []
          }
        ],
        "responses": {
          "201": {
            "description": "Verify a phone"
          },
          "400": {
            "description": "Required params are empty"
          },
          "401": {
            "description": "Invalid bearer token"
          },
          "404": {
            "description": "Record is not found"
          }
        },
        "tags": [
          "resource"
        ],
        "operationId": "postResourcePhonesVerify"
      }
    },
    "/resource/phones/send_code": {
      "post": {
        "description": "Resend activation code",
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "formData",
            "name": "phone_number",
            "description": "Phone number with country code",
            "type": "string",
            "required": true
          },
          {
            "in": "formData",
            "name": "channel",
            "description": "The verification method to use",
            "type": "string",
            "default": "sms",
            "enum": [
              "call",
              "sms"
            ],
            "required": false
          }
        ],
        "security": [
          {
            "BearerToken": []
          }
        ],
        "responses": {
          "201": {
            "description": "Resend activation code"
          },
          "400": {
            "description": "Required params are empty"
          },
          "401": {
            "description": "Invalid bearer token"
          },
          "404": {
            "description": "Record is not found"
          },
          "422": {
            "description": "Validation errors"
          }
        },
        "tags": [
          "resource"
        ],
        "operationId": "postResourcePhonesSendCode"
      }
    },
    "/resource/phones": {
      "post": {
        "description": "Add new phone",
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "formData",
            "name": "phone_number",
            "description": "Phone number with country code",
            "type": "string",
            "required": true
          },
          {
            "in": "formData",
            "name": "channel",
            "description": "The verification method to use",
            "type": "string",
            "default": "sms",
            "enum": [
              "call",
              "sms"
            ],
            "required": false
          }
        ],
        "security": [
          {
            "BearerToken": []
          }
        ],
        "responses": {
          "201": {
            "description": "Add new phone"
          },
          "400": {
            "description": "Required params are empty"
          },
          "401": {
            "description": "Invalid bearer token"
          },
          "404": {
            "description": "Record is not found"
          },
          "422": {
            "description": "Validation errors"
          }
        },
        "tags": [
          "resource"
        ],
        "operationId": "postResourcePhones"
      },
      "get": {
        "description": "Returns list of user's phones",
        "produces": [
          "application/json"
        ],
        "security": [
          {
            "BearerToken": []
          }
        ],
        "responses": {
          "200": {
            "description": "Returns list of user's phones"
          },
          "401": {
            "description": "Invalid bearer token"
          }
        },
        "tags": [
          "resource"
        ],
        "operationId": "getResourcePhones"
      }
    },
    "/resource/documents": {
      "post": {
        "description": "Upload a new document for current user",
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "formData",
            "name": "doc_type",
            "description": "Document type",
            "type": "string",
            "required": true
          },
          {
            "in": "formData",
            "name": "doc_number",
            "description": "Document number",
            "type": "string",
            "required": true
          },
          {
            "in": "formData",
            "name": "upload",
            "description": "Array of Rack::Multipart::UploadedFile",
            "type": "string",
            "required": true
          },
          {
            "in": "formData",
            "name": "doc_expire",
            "description": "Document expiration date",
            "type": "string",
            "format": "date",
            "required": false
          },
          {
            "in": "formData",
            "name": "metadata",
            "description": "Any additional key: value pairs in json string format",
            "type": "string",
            "required": false
          }
        ],
        "security": [
          {
            "BearerToken": []
          }
        ],
        "responses": {
          "201": {
            "description": "Document is uploaded"
          },
          "400": {
            "description": "Required params are empty"
          },
          "401": {
            "description": "Invalid bearer token"
          },
          "422": {
            "description": "Validation errors"
          }
        },
        "tags": [
          "resource"
        ],
        "operationId": "postResourceDocuments"
      },
      "get": {
        "description": "Return current user documents list",
        "produces": [
          "application/json"
        ],
        "security": [
          {
            "BearerToken": []
          }
        ],
        "responses": {
          "200": {
            "description": "Return current user documents list"
          },
          "401": {
            "description": "Invalid bearer token"
          }
        },
        "tags": [
          "resource"
        ],
        "operationId": "getResourceDocuments"
      }
    },
    "/resource/profiles": {
      "put": {
        "description": "Update a profile for current_user",
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "formData",
            "name": "first_name",
            "type": "string",
            "required": false
          },
          {
            "in": "formData",
            "name": "last_name",
            "type": "string",
            "required": false
          },
          {
            "in": "formData",
            "name": "dob",
            "type": "string",
            "format": "date",
            "required": false
          },
          {
            "in": "formData",
            "name": "address",
            "type": "string",
            "required": false
          },
          {
            "in": "formData",
            "name": "postcode",
            "type": "string",
            "required": false
          },
          {
            "in": "formData",
            "name": "city",
            "type": "string",
            "required": false
          },
          {
            "in": "formData",
            "name": "country",
            "type": "string",
            "required": false
          },
          {
            "in": "formData",
            "name": "metadata",
            "description": "Any additional key: value pairs in json string format",
            "type": "string",
            "required": false
          },
          {
            "in": "formData",
            "name": "confirm",
            "description": "Profile confirmation",
            "type": "Boolean",
            "required": false
          }
        ],
        "security": [
          {
            "BearerToken": []
          }
        ],
        "responses": {
          "200": {
            "description": "Update a profile for current_user"
          },
          "401": {
            "description": "Invalid bearer token"
          },
          "422": {
            "description": "Validation errors"
          }
        },
        "tags": [
          "resource"
        ],
        "operationId": "putResourceProfiles"
      },
      "post": {
        "description": "Create a profile for current_user",
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "formData",
            "name": "first_name",
            "type": "string",
            "required": false
          },
          {
            "in": "formData",
            "name": "last_name",
            "type": "string",
            "required": false
          },
          {
            "in": "formData",
            "name": "dob",
            "type": "string",
            "format": "date",
            "required": false
          },
          {
            "in": "formData",
            "name": "address",
            "type": "string",
            "required": false
          },
          {
            "in": "formData",
            "name": "postcode",
            "type": "string",
            "required": false
          },
          {
            "in": "formData",
            "name": "city",
            "type": "string",
            "required": false
          },
          {
            "in": "formData",
            "name": "country",
            "type": "string",
            "required": false
          },
          {
            "in": "formData",
            "name": "metadata",
            "description": "Any additional key: value pairs in json string format",
            "type": "string",
            "required": false
          },
          {
            "in": "formData",
            "name": "confirm",
            "description": "Profile confirmation",
            "type": "Boolean",
            "required": false
          }
        ],
        "security": [
          {
            "BearerToken": []
          }
        ],
        "responses": {
          "201": {
            "description": "Create a profile for current_user"
          },
          "400": {
            "description": "Required params are empty"
          },
          "401": {
            "description": "Invalid bearer token"
          },
          "409": {
            "description": "Profile already exists"
          },
          "422": {
            "description": "Validation errors"
          }
        },
        "tags": [
          "resource"
        ],
        "operationId": "postResourceProfiles"
      }
    },
    "/resource/profiles/me": {
      "get": {
        "description": "Return profiles of current resource owner",
        "produces": [
          "application/json"
        ],
        "security": [
          {
            "BearerToken": []
          }
        ],
        "responses": {
          "200": {
            "description": "Return profiles of current resource owner"
          },
          "401": {
            "description": "Invalid bearer token"
          },
          "404": {
            "description": "User has no profile"
          }
        },
        "tags": [
          "resource"
        ],
        "operationId": "getResourceProfilesMe"
      }
    },
    "/resource/labels/{key}": {
      "delete": {
        "description": "Delete a label  with 'public' scope.",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "key",
            "description": "Label key.",
            "type": "string",
            "required": true
          }
        ],
        "security": [
          {
            "BearerToken": []
          }
        ],
        "responses": {
          "204": {
            "description": "Succefully deleted"
          },
          "400": {
            "description": "Required params are empty"
          },
          "401": {
            "description": "Invalid bearer token"
          },
          "404": {
            "description": "Record is not found"
          }
        },
        "tags": [
          "resource"
        ],
        "operationId": "deleteResourceLabelsKey"
      },
      "patch": {
        "description": "Update a label with 'public' scope.",
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "key",
            "description": "Label key.",
            "type": "string",
            "required": true
          },
          {
            "in": "formData",
            "name": "value",
            "description": "Label value.",
            "type": "string",
            "required": true
          }
        ],
        "security": [
          {
            "BearerToken": []
          }
        ],
        "responses": {
          "200": {
            "description": "Update a label with 'public' scope."
          },
          "400": {
            "description": "Required params are empty"
          },
          "401": {
            "description": "Invalid bearer token"
          },
          "404": {
            "description": "Record is not found"
          },
          "422": {
            "description": "Validation errors"
          }
        },
        "tags": [
          "resource"
        ],
        "operationId": "patchResourceLabelsKey"
      },
      "get": {
        "description": "Return a label by key.",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "key",
            "description": "Label key.",
            "type": "string",
            "required": true
          }
        ],
        "security": [
          {
            "BearerToken": []
          }
        ],
        "responses": {
          "200": {
            "description": "Return a label by key."
          },
          "400": {
            "description": "Required params are empty"
          },
          "401": {
            "description": "Invalid bearer token"
          },
          "404": {
            "description": "Record is not found"
          }
        },
        "tags": [
          "resource"
        ],
        "operationId": "getResourceLabelsKey"
      }
    },
    "/resource/labels": {
      "post": {
        "description": "Create a label with 'public' scope.",
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "formData",
            "name": "key",
            "description": "Label key.",
            "type": "string",
            "required": true
          },
          {
            "in": "formData",
            "name": "value",
            "description": "Label value.",
            "type": "string",
            "required": true
          }
        ],
        "security": [
          {
            "BearerToken": []
          }
        ],
        "responses": {
          "201": {
            "description": "Create a label with 'public' scope."
          },
          "400": {
            "description": "Required params are empty"
          },
          "401": {
            "description": "Invalid bearer token"
          },
          "422": {
            "description": "Validation errors"
          }
        },
        "tags": [
          "resource"
        ],
        "operationId": "postResourceLabels"
      },
      "get": {
        "description": "List all labels for current user.",
        "produces": [
          "application/json"
        ],
        "security": [
          {
            "BearerToken": []
          }
        ],
        "responses": {
          "200": {
            "description": "List all labels for current user."
          },
          "401": {
            "description": "Invalid bearer token"
          }
        },
        "tags": [
          "resource"
        ],
        "operationId": "getResourceLabels"
      }
    },
    "/resource/users/password": {
      "put": {
        "description": "Sets new account password",
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "formData",
            "name": "old_password",
            "description": "Previous account password",
            "type": "string",
            "required": true
          },
          {
            "in": "formData",
            "name": "new_password",
            "description": "User password",
            "type": "string",
            "required": true
          },
          {
            "in": "formData",
            "name": "confirm_password",
            "description": "User password",
            "type": "string",
            "required": true
          },
          {
            "in": "formData",
            "name": "lang",
            "description": "Language in iso-2 format",
            "type": "string",
            "required": false
          }
        ],
        "responses": {
          "201": {
            "description": "Changes password"
          },
          "400": {
            "description": "Required params are empty"
          },
          "404": {
            "description": "Record is not found"
          },
          "422": {
            "description": "Validation errors"
          }
        },
        "tags": [
          "resource"
        ],
        "operationId": "putResourceUsersPassword"
      }
    },
    "/resource/users/activity/{topic}": {
      "get": {
        "description": "Returns user activity",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "topic",
            "description": "Topic of user activity. Allowed: [all, password, session, otp]",
            "type": "string",
            "required": true
          },
          {
            "in": "query",
            "name": "page",
            "description": "Page number (defaults to 1).",
            "type": "integer",
            "format": "int32",
            "default": 1,
            "required": false
          },
          {
            "in": "query",
            "name": "limit",
            "description": "Number of users per page (defaults to 100, maximum is 100).",
            "type": "integer",
            "format": "int32",
            "default": 100,
            "minimum": 1,
            "maximum": 100,
            "required": false
          }
        ],
        "responses": {
          "200": {
            "description": "Returns user activity"
          }
        },
        "tags": [
          "resource"
        ],
        "operationId": "getResourceUsersActivityTopic"
      }
    },
    "/resource/users/me": {
      "delete": {
        "description": "Returns current user",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "password",
            "description": "Account password",
            "type": "string",
            "required": true
          },
          {
            "in": "query",
            "name": "otp_code",
            "description": "Code from Google Authenticator",
            "type": "string",
            "required": false
          }
        ],
        "responses": {
          "204": {
            "description": "Returns current user"
          }
        },
        "tags": [
          "resource"
        ],
        "operationId": "deleteResourceUsersMe"
      },
      "get": {
        "description": "Returns current user",
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Returns current user"
          }
        },
        "tags": [
          "resource"
        ],
        "operationId": "getResourceUsersMe"
      }
    }
  },
  "definitions": {
    "Level": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "format": "int32",
          "description": "Level identifier, level number"
        },
        "key": {
          "type": "string",
          "description": "Label key. [A-Za-z0-9_-] should be used. Min - 3, max - 255 characters."
        },
        "value": {
          "type": "string",
          "description": "Label value. [A-Za-z0-9_-] should be used. Min - 3, max - 255 characters."
        }
      }
    },
    "Label": {
      "type": "object",
      "properties": {
        "key": {
          "type": "string",
          "description": "Label key. [a-z0-9_-]+ should be used. Min - 3, max - 255 characters."
        },
        "value": {
          "type": "string",
          "description": "Label value. [A-Za-z0-9_-] should be used. Min - 3, max - 255 characters."
        },
        "scope": {
          "type": "string",
          "description": "Label scope: 'public' or 'private'"
        },
        "created_at": {
          "type": "string"
        },
        "updated_at": {
          "type": "string"
        }
      }
    },
    "APIKey": {
      "type": "object",
      "properties": {
        "kid": {
          "type": "string",
          "description": "jwt public key"
        },
        "algorithm": {
          "type": "string",
          "description": "cryptographic hash function type"
        },
        "scope": {
          "type": "string",
          "description": "serialized array of scopes"
        },
        "state": {
          "type": "string",
          "description": "active/non-active state of key"
        },
        "secret": {
          "type": "string"
        },
        "created_at": {
          "type": "string"
        },
        "updated_at": {
          "type": "string"
        }
      }
    },
    "Profile": {
      "type": "object",
      "properties": {
        "first_name": {
          "type": "string"
        },
        "last_name": {
          "type": "string"
        },
        "dob": {
          "type": "string",
          "format": "date",
          "description": "Birthday date"
        },
        "address": {
          "type": "string"
        },
        "postcode": {
          "type": "string"
        },
        "city": {
          "type": "string"
        },
        "country": {
          "type": "string"
        },
        "state": {
          "type": "string"
        },
        "metadata": {
          "type": "object",
          "description": "Profile additional fields"
        }
      }
    },
    "User": {
      "type": "object",
      "properties": {
        "email": {
          "type": "string"
        },
        "uid": {
          "type": "string"
        },
        "role": {
          "type": "string"
        },
        "level": {
          "type": "integer",
          "format": "int32"
        },
        "otp": {
          "type": "boolean",
          "description": "is 2FA enabled for account"
        },
        "state": {
          "type": "string"
        },
        "referral_uid": {
          "type": "string",
          "description": "UID of referrer"
        },
        "data": {
          "type": "string",
          "description": "additional phone and profile info"
        }
      }
    },
    "UserWithProfile": {
      "type": "object",
      "properties": {
        "email": {
          "type": "string"
        },
        "uid": {
          "type": "string"
        },
        "role": {
          "type": "string"
        },
        "level": {
          "type": "integer",
          "format": "int32"
        },
        "otp": {
          "type": "boolean",
          "description": "is 2FA enabled for account"
        },
        "state": {
          "type": "string"
        },
        "data": {
          "type": "string",
          "description": "additional phone and profile info"
        },
        "profiles": {
          "$ref": "#/definitions/Profile"
        },
        "referral_uid": {
          "type": "string",
          "description": "UID of referrer"
        },
        "created_at": {
          "type": "string"
        },
        "updated_at": {
          "type": "string"
        }
      }
    },
    "UserWithKYC": {
      "type": "object",
      "properties": {
        "email": {
          "type": "string"
        },
        "uid": {
          "type": "string"
        },
        "role": {
          "type": "string"
        },
        "level": {
          "type": "integer",
          "format": "int32"
        },
        "otp": {
          "type": "boolean"
        },
        "state": {
          "type": "string"
        },
        "data": {
          "type": "string",
          "description": "additional phone and profile info"
        },
        "profiles": {
          "$ref": "#/definitions/Profile"
        },
        "labels": {
          "$ref": "#/definitions/AdminLabelView"
        },
        "phones": {
          "$ref": "#/definitions/Phone"
        },
        "documents": {
          "$ref": "#/definitions/Document"
        },
        "data_storages": {
          "$ref": "#/definitions/DataStorage"
        },
        "referral_uid": {
          "type": "string",
          "description": "UID of referrer"
        },
        "created_at": {
          "type": "string"
        },
        "updated_at": {
          "type": "string"
        }
      }
    },
    "AdminLabelView": {
      "type": "object",
      "properties": {
        "key": {
          "type": "string",
          "description": "Label key. [a-z0-9_-]+ should be used. Min - 3, max - 255 characters."
        },
        "value": {
          "type": "string",
          "description": "Label value. [A-Za-z0-9_-] should be used. Min - 3, max - 255 characters."
        },
        "scope": {
          "type": "string",
          "description": "Label scope: 'public' or 'private'"
        },
        "description": {
          "type": "string",
          "description": "Label desc: json string with any additional information"
        },
        "created_at": {
          "type": "string"
        },
        "updated_at": {
          "type": "string"
        }
      }
    },
    "Phone": {
      "type": "object",
      "properties": {
        "country": {
          "type": "string"
        },
        "number": {
          "type": "string"
        },
        "validated_at": {
          "type": "s",
          "format": "g"
        }
      }
    },
    "Document": {
      "type": "object",
      "properties": {
        "upload": {
          "type": "string",
          "description": "file url"
        },
        "doc_type": {
          "type": "string",
          "description": "document type: passport, driver license"
        },
        "doc_number": {
          "type": "string",
          "description": "document number: AB123123 type"
        },
        "doc_expire": {
          "type": "string",
          "description": "expire date of uploaded documents"
        },
        "metadata": {
          "type": "string",
          "description": "any additional stored data"
        },
        "created_at": {
          "type": "string"
        },
        "updated_at": {
          "type": "string"
        }
      }
    },
    "DataStorage": {
      "type": "object",
      "properties": {
        "title": {
          "type": "string",
          "description": "any additional data title"
        },
        "data": {
          "type": "string",
          "description": "any additional data json key:value pairs"
        },
        "created_at": {
          "type": "string"
        },
        "updated_at": {
          "type": "string"
        }
      }
    },
    "UserWithFullInfo": {
      "type": "object",
      "properties": {
        "email": {
          "type": "string"
        },
        "uid": {
          "type": "string"
        },
        "role": {
          "type": "string"
        },
        "level": {
          "type": "integer",
          "format": "int32"
        },
        "otp": {
          "type": "boolean"
        },
        "state": {
          "type": "string"
        },
        "referral_uid": {
          "type": "string",
          "description": "UID of referrer"
        },
        "csrf_token": {
          "type": "string",
          "description": "csrf protection token"
        },
        "data": {
          "type": "string",
          "description": "additional phone and profile info"
        },
        "created_at": {
          "type": "string"
        },
        "updated_at": {
          "type": "string"
        },
        "labels": {
          "$ref": "#/definitions/Label"
        },
        "phones": {
          "$ref": "#/definitions/Phone"
        },
        "profiles": {
          "$ref": "#/definitions/Profile"
        },
        "data_storages": {
          "$ref": "#/definitions/DataStorage"
        }
      }
    },
    "Activity": {
      "type": "object",
      "properties": {
        "user_ip": {
          "type": "string"
        },
        "user_agent": {
          "type": "string"
        },
        "topic": {
          "type": "string"
        },
        "action": {
          "type": "string"
        },
        "result": {
          "type": "string"
        },
        "data": {
          "type": "string"
        },
        "created_at": {
          "type": "string"
        }
      }
    }
  }
}
